// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: prover.proto

package prover

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProofSystem int32

const (
	ProofSystem_PROOF_SYSTEM_UNSPECIFIED ProofSystem = 0
	ProofSystem_PROOF_SYSTEM_PLONK       ProofSystem = 1
	ProofSystem_PROOF_SYSTEM_GROTH16     ProofSystem = 2
)

// Enum value maps for ProofSystem.
var (
	ProofSystem_name = map[int32]string{
		0: "PROOF_SYSTEM_UNSPECIFIED",
		1: "PROOF_SYSTEM_PLONK",
		2: "PROOF_SYSTEM_GROTH16",
	}
	ProofSystem_value = map[string]int32{
		"PROOF_SYSTEM_UNSPECIFIED": 0,
		"PROOF_SYSTEM_PLONK":       1,
		"PROOF_SYSTEM_GROTH16":     2,
	}
)

func (x ProofSystem) Enum() *ProofSystem {
	p := new(ProofSystem)
	*p = x
	return p
}

func (x ProofSystem) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProofSystem) Descriptor() protoreflect.EnumDescriptor {
	return file_prover_proto_enumTypes[0].Descriptor()
}

func (ProofSystem) Type() protoreflect.EnumType {
	return &file_prover_proto_enumTypes[0]
}

func (x ProofSystem) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProofSystem.Descriptor instead.
func (ProofSystem) EnumDescriptor() ([]byte, []int) {
	return file_prover_proto_rawDescGZIP(), []int{0}
}

type ProveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System          ProofSystem `protobuf:"varint,1,opt,name=system,proto3,enum=prover.ProofSystem" json:"system,omitempty"`
	NumParticipants uint32      `protobuf:"varint,2,opt,name=num_participants,json=numParticipants,proto3" json:"num_participants,omitempty"`
	NumWinners      uint32      `protobuf:"varint,3,opt,name=num_winners,json=numWinners,proto3" json:"num_winners,omitempty"`
	Randomness      string      `protobuf:"bytes,4,opt,name=randomness,proto3" json:"randomness,omitempty"` // 32 bytes
}

func (x *ProveRequest) Reset() {
	*x = ProveRequest{}
	mi := &file_prover_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProveRequest) ProtoMessage() {}

func (x *ProveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prover_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProveRequest.ProtoReflect.Descriptor instead.
func (*ProveRequest) Descriptor() ([]byte, []int) {
	return file_prover_proto_rawDescGZIP(), []int{0}
}

func (x *ProveRequest) GetSystem() ProofSystem {
	if x != nil {
		return x.System
	}
	return ProofSystem_PROOF_SYSTEM_UNSPECIFIED
}

func (x *ProveRequest) GetNumParticipants() uint32 {
	if x != nil {
		return x.NumParticipants
	}
	return 0
}

func (x *ProveRequest) GetNumWinners() uint32 {
	if x != nil {
		return x.NumWinners
	}
	return 0
}

func (x *ProveRequest) GetRandomness() string {
	if x != nil {
		return x.Randomness
	}
	return ""
}

type ProveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the proof, can be used to view on the prover network explorer
	ProofId         string `protobuf:"bytes,1,opt,name=proof_id,json=proofId,proto3" json:"proof_id,omitempty"`
	PublicValues    string `protobuf:"bytes,2,opt,name=public_values,json=publicValues,proto3" json:"public_values,omitempty"`
	Proof           string `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	NumParticipants uint32 `protobuf:"varint,4,opt,name=num_participants,json=numParticipants,proto3" json:"num_participants,omitempty"`
	NumWinners      uint32 `protobuf:"varint,5,opt,name=num_winners,json=numWinners,proto3" json:"num_winners,omitempty"`
	Randomness      string `protobuf:"bytes,6,opt,name=randomness,proto3" json:"randomness,omitempty"`
	MerkleRoot      string `protobuf:"bytes,7,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
}

func (x *ProveResponse) Reset() {
	*x = ProveResponse{}
	mi := &file_prover_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProveResponse) ProtoMessage() {}

func (x *ProveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prover_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProveResponse.ProtoReflect.Descriptor instead.
func (*ProveResponse) Descriptor() ([]byte, []int) {
	return file_prover_proto_rawDescGZIP(), []int{1}
}

func (x *ProveResponse) GetProofId() string {
	if x != nil {
		return x.ProofId
	}
	return ""
}

func (x *ProveResponse) GetPublicValues() string {
	if x != nil {
		return x.PublicValues
	}
	return ""
}

func (x *ProveResponse) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

func (x *ProveResponse) GetNumParticipants() uint32 {
	if x != nil {
		return x.NumParticipants
	}
	return 0
}

func (x *ProveResponse) GetNumWinners() uint32 {
	if x != nil {
		return x.NumWinners
	}
	return 0
}

func (x *ProveResponse) GetRandomness() string {
	if x != nil {
		return x.Randomness
	}
	return ""
}

func (x *ProveResponse) GetMerkleRoot() string {
	if x != nil {
		return x.MerkleRoot
	}
	return ""
}

var File_prover_proto protoreflect.FileDescriptor

var file_prover_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x22, 0xa7, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x6e, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x6e, 0x65, 0x73, 0x73,
	0x22, 0xf2, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x77, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x57, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x6e, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x2a, 0x5d, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x4f, 0x46, 0x5f, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x4f, 0x46, 0x5f, 0x53, 0x59, 0x53, 0x54,
	0x45, 0x4d, 0x5f, 0x50, 0x4c, 0x4f, 0x4e, 0x4b, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52,
	0x4f, 0x4f, 0x46, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x47, 0x52, 0x4f, 0x54, 0x48,
	0x31, 0x36, 0x10, 0x02, 0x32, 0x45, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x34, 0x5a, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x61, 0x6c, 0x78, 0x65, 0x2f,
	0x67, 0x61, 0x6c, 0x78, 0x65, 0x2d, 0x72, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x2f, 0x67, 0x6f, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x3b, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_prover_proto_rawDescOnce sync.Once
	file_prover_proto_rawDescData = file_prover_proto_rawDesc
)

func file_prover_proto_rawDescGZIP() []byte {
	file_prover_proto_rawDescOnce.Do(func() {
		file_prover_proto_rawDescData = protoimpl.X.CompressGZIP(file_prover_proto_rawDescData)
	})
	return file_prover_proto_rawDescData
}

var file_prover_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_prover_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_prover_proto_goTypes = []any{
	(ProofSystem)(0),      // 0: prover.ProofSystem
	(*ProveRequest)(nil),  // 1: prover.ProveRequest
	(*ProveResponse)(nil), // 2: prover.ProveResponse
}
var file_prover_proto_depIdxs = []int32{
	0, // 0: prover.ProveRequest.system:type_name -> prover.ProofSystem
	1, // 1: prover.ProverService.Prove:input_type -> prover.ProveRequest
	2, // 2: prover.ProverService.Prove:output_type -> prover.ProveResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_prover_proto_init() }
func file_prover_proto_init() {
	if File_prover_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prover_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prover_proto_goTypes,
		DependencyIndexes: file_prover_proto_depIdxs,
		EnumInfos:         file_prover_proto_enumTypes,
		MessageInfos:      file_prover_proto_msgTypes,
	}.Build()
	File_prover_proto = out.File
	file_prover_proto_rawDesc = nil
	file_prover_proto_goTypes = nil
	file_prover_proto_depIdxs = nil
}
